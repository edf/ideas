---
- name: Identify unformatted block devices
  hosts: localhost
  gather_facts: false

  vars:
    root_disk_name: nvme0n1

    lsblk_output: |
      NAME="nvme0n1" TYPE="disk" MOUNTPOINT=""
      NAME="nvme0n1p1" TYPE="part" MOUNTPOINT=""
      NAME="nvme0n1p2" TYPE="part" MOUNTPOINT="/boot/efi"
      NAME="nvme0n1p3" TYPE="part" MOUNTPOINT="/boot"
      NAME="nvme0n1p4" TYPE="part" MOUNTPOINT="/"
      NAME="nvme1n1" TYPE="disk" MOUNTPOINT=""
      NAME="nvme1n1p1" TYPE="part" MOUNTPOINT="[SWAP]"
      NAME="nvme2n1" TYPE="disk" MOUNTPOINT=""
      NAME="nvme2n1p1" TYPE="part" MOUNTPOINT="/usr"
      NAME="nvme3n1" TYPE="disk" MOUNTPOINT=""
      NAME="nvme4n1" TYPE="disk" MOUNTPOINT=""

  tasks:

    - name: Split lsblk output into lines
      ansible.builtin.set_fact:
        lsblk_lines: "{{ lsblk_output.splitlines() }}"

    - name: Parse each line into dict and build device list
      vars:
        parsed: "{{ dict(item | regex_findall('([A-Z]+)=\"(.*?)\"')) }}"
      ansible.builtin.set_fact:
        lsblk_devices: "{{ lsblk_devices | default([]) + [parsed] }}"
      loop: "{{ lsblk_lines }}"

    - name: Get all disk device names
      ansible.builtin.set_fact:
        all_disks: >-
          {{ lsblk_devices
             | selectattr('TYPE', 'equalto', 'disk')
             | map(attribute='NAME')
             | list }}

    - name: Get all used disk names (partitions with mountpoints or swap)
      ansible.builtin.set_fact:
        used_disks: >-
          {{ lsblk_devices
             | selectattr('TYPE', 'equalto', 'part')
             | selectattr('MOUNTPOINT', 'match', '.+')
             | map(attribute='NAME')
             | map('regex_replace', 'p?[0-9]+$', '')  # Strip partition suffix
             | list }}

    - name: Determine unformatted disks
      ansible.builtin.set_fact:
        unformatted_disks: >-
          {{ all_disks
             | difference(used_disks)
             | difference([root_disk_name]) }}

    - name: Show result
      ansible.builtin.debug:
        var: unformatted_disks
